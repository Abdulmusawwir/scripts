
If ([string]::IsNullOrEmpty($script:LogFile)) { $LogFile = "$env:SystemRoot\Logs\WindowsUpdateAgentHealth.log" }

Function Write-LogMessage {
	#.Synopsis Write a log entry in CMTrace format with almost as little code as possible (i.e. Simplified Edition)
	param ($Message, [ValidateSet('Error', 'Warn', 'Warning', 'Info', 'Information', '1', '2', '3')]$Type = '1', $LogFile = $script:LogFile, [switch]$Console)
	If (-not(Test-Path 'variable:script:LogFile')) { $script:LogFile = $LogFile }
	Switch ($Type) { { @('2', 'Warn', 'Warning') -contains $_ } { $Type = 2 }; { @('3', 'Error') -contains $_ } { $Type = 3 }; Default { $Type = 1 } }
	If ($Console) { Write-Output "$(Get-Date -F 'yyyy/MM/dd HH:mm:ss.fff')`t$(Switch ($Type) { 2 { 'WARNING: '}; 3 { 'ERROR: '}})$Message" }
	try {
		Add-Content -Path "filesystem::$LogFile" -Encoding UTF8 -WhatIf:$false -Confirm:$false -Value "<![LOG[$Message]LOG]!><time=`"$(Get-Date -F HH:mm:ss.fff)+000`" date=`"$(Get-Date -F 'MM-dd-yyyy')`" component=`" `" context=`" `" type=`"$Type`" thread=`"$PID`" file=`"`">" -ErrorAction Stop
	} catch { Write-Warning -Message "Failed writing to log [$LogFile] with message [$Message]" }
}


Write-LogMessage -Message 'Stopping Windows Services related to the Windows Update Agent' -Console
#TODO: monitor and wait for each to stop
Stop-Service -Force -ErrorAction SilentlyContinue -Name BITS
Stop-Service -Force -ErrorAction SilentlyContinue -Name wuauserv
Stop-Service -Force -ErrorAction SilentlyContinue -Name appidsvc
Stop-Service -Force -ErrorAction SilentlyContinue -Name cryptsvc
#TODO: exit with error if not successful

Write-LogMessage -Message 'Resetting Windows Services related to the Windows Update Agent to default security settings' -Console
 sc.exe sdset bits "D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)"
#sc.exe sdset bits "D:(A; ; CCLCSWLOCRRC; ; ; AU)(A; ; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; ; BA)(A; ; CCDCLCSWRPWPDTLCRSDRCWDWO; ; ; SO)(A; ; CCLCSWRPWPDTLOCRRC; ; ; SY)S:(AU; FA; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; WD)"
#sc.exe sdset wuauserv "D:(A; ; CCLCSWLOCRRC; ; ; AU)(A; ; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; ; BA)(A; ; CCDCLCSWRPWPDTLCRSDRCWDWO; ; ; SO)(A; ; CCLCSWRPWPDTLOCRRC; ; ; SY)S:(AU; FA; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; WD)"
 sc.exe sdset wuauserv "D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)"
#sc.exe sdset cryptsvc "D:(A; ; CCLCSWLOCRRC; ; ; AU)(A; ; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; ; BA)(A; ; CCDCLCSWRPWPDTLCRSDRCWDWO; ; ; SO)(A; ; CCLCSWRPWPDTLOCRRC; ; ; SY)S:(AU; FA; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; WD)"
#sc.exe sdset trustedinstaller "D:(A; ; CCLCSWLOCRRC; ; ; AU)(A; ; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; ; BA)(A; ; CCDCLCSWRPWPDTLCRSDRCWDWO; ; ; SO)(A; ; CCLCSWRPWPDTLOCRRC; ; ; SY)S:(AU; FA; CCDCLCSWRPWPDTLOCRSDRCWDWO; ; WD)"

Write-LogMessage -Message 'Resetting Windows Services related to the Windows Update Agent to default startup settings' -Console
sc.exe config wuauserv start= auto
sc.exe config bits start= delayed-auto
sc.exe config cryptsvc start= auto
sc.exe config TrustedInstaller start= demand
sc.exe config DcomLaunch start= auto


Write-LogMessage -Message 'Deleting old files and folders...' -Console
Write-LogMessage -Message "Removing [$env:allusersprofile\Application Data\Microsoft\Network\Downloader\qmgr*.dat]"
Remove-Item -Force -ErrorAction SilentlyContinue -Path "$env:allusersprofile\Application Data\Microsoft\Network\Downloader\qmgr*.dat"

# Delete Windows Update Agent downloads
Write-LogMessage -Message "Removing [$env:SystemRoot\SoftwareDistribution\download]"
Remove-Item -Force -ErrorAction SilentlyContinue -Recurse -Path "$($env:SystemRoot)\SoftwareDistribution\download\*"

# Rename SoftwareDistribution folder
Write-LogMessage -Message "Removing [$env:SystemRoot\SoftwareDistribution.bak]"
Remove-Item -Force -ErrorAction SilentlyContinue -Path $env:SystemRoot\SoftwareDistribution.bak -Recurse
Write-LogMessage -Message "Resetting file and folder attributes for [$env:SystemRoot\SoftwareDistribution]"
& $env:windir\system32\attrib.exe -r -s -h /s /d $env:SystemRoot\SoftwareDistribution
Write-LogMessage -Message "Renaming [$env:SystemRoot\SoftwareDistribution] to [.bak]"
Rename-Item -Force -ErrorAction SilentlyContinue -Path "$($env:SystemRoot)\SoftwareDistribution" -NewName SoftwareDistribution.bak

# Rename Catroot2 folder
Write-LogMessage -Message "Removing [$env:SystemRoot\System32\Catroot2.bak]"
Remove-Item -Force -ErrorAction SilentlyContinue -Path $env:SystemRoot\System32\Catroot2.bak -Recurse
Write-LogMessage -Message "Resetting file and folder attributes for [$env:SystemRoot\System32\Catroot2]"
& $env:windir\system32\attrib.exe -r -s -h /s /d $env:SystemRoot\System32\Catroot2
Write-LogMessage -Message "Renaming [$env:SystemRoot\System32\Catroot2] to [.bak]"
Rename-Item -Force -ErrorAction SilentlyContinue -Path $env:SystemRoot\System32\Catroot2 -NewName Catroot2.bak

If ([System.Environment]::OSVersion.Version.Major -lt 10) {
	Write-LogMessage -Message "Renaming [$env:SystemRoot\WindowsUpdate.log] to [WindowsUpdate.$(Get-Date -Format 'yyyyMMdd').log]"
	Rename-Item -Force -ErrorAction SilentlyContinue -Path "$env:SystemRoot\WindowsUpdate.log" -Destination "WindowsUpdate.$(Get-Date -Format 'yyyyMMdd').log"
	Remove-Item -Force -ErrorAction SilentlyContinue -Path "$env:SystemRoot\WindowsUpdate.log" #this should not exist after the rename
}


#From Repair-UpdateClient.ps1 by Manuel Gil
Write-LogMessage -Message "Renaming [$env:SystemRoot\WinSxS\pending.xml] to [pending.$(Get-Date -Format 'yyyyMMdd').xml]"
Rename-Item -Force -ErrorAction SilentlyContinue -Path "$env:SystemRoot\WinSxS\pending.xml" -NewName "pending.$(Get-Date -Format 'yyyyMMdd').xml"
Remove-Item -Force -ErrorAction SilentlyContinue -Path $env:SystemRoot\WinSxS\pending.xml #this should not exist after the rename


#TODO: from another community solution
#Write-LogMessage -Message "Renaming [$env:SystemRoot\spupdsvc.exe] to [spupdsvc.bak]"
#Remove-Item -Force -ErrorAction SilentlyContinue -Path $env:SystemRoot\system32\spupdsvc.bak
#Rename-Item -Force -ErrorAction SilentlyContinue -Path $env:SystemRoot\spupdsvc.exe -Destination spupdsvc.bak


Write-LogMessage -Message 'Removing WSUS client settings' -Console
#TODO: Backup existing registry for potential troubleshooting
Remove-ItemProperty -Force -ErrorAction SilentlyContinue -Path 'registry::HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate' -Name AccountDomainSid
Remove-ItemProperty -Force -ErrorAction SilentlyContinue -Path 'registry::HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate' -Name PingID
Remove-ItemProperty -Force -ErrorAction SilentlyContinue -Path 'registry::HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate' -Name SusClientId
Remove-ItemProperty -Force -ErrorAction SilentlyContinue -Path 'registry::HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate' -Name SusClientIDValidation


Write-LogMessage -Message 'Resetting the WinSock' -Console
#NOTE: WINSOCK RESET may require a computer restart/reboot to complete
netsh winsock reset
netsh winhttp reset proxy


Write-LogMessage -Message 'Delete all BITS jobs' -Console
#needs PowerShell 3.0+ Get-BitsTransfer -AllUsers | Remove-BitsTransfer
BitsAdmin.exe /Reset /AllUsers


Write-LogMessage -Message 'Resetting Active Directory Group Policy (deleting registry.pol)' -Console
Write-LogMessage -Message "Renaming [$env:SystemRoot\System32\GroupPolicy\Machine\Registry.pol] to [Registry.$(Get-Date -Format 'yyyyMMdd').pol]"
Rename-Item -Force -ErrorAction SilentlyContinue -Path "$env:SystemRoot\System32\GroupPolicy\Machine\Registry.pol" -NewName "Registry.$(Get-Date -Format 'yyyyMMdd').pol"
Remove-Item -Force -ErrorAction SilentlyContinue -Path "$env:SystemRoot\System32\GroupPolicy\Machine\Registry.pol" #this should not exist after the rename


Write-LogMessage -Message 'Registering DLLs for Windows Update Agent' -Console
$Files = 'atl.dll,urlmon.dll,mshtml.dll,shdocvw.dll,browseui.dll,jscript.dll,vbscript.dll,scrrun.dll,msxml.dll,msxml3.dll,msxml6.dll,actxprxy.dll,softpub.dll,wintrust.dll,dssenh.dll,rsaenh.dll,gpkcsp.dll,sccbase.dll,slbcsp.dll,cryptdlg.dll,oleaut32.dll,ole32.dll,shell32.dll,initpki.dll,wuapi.dll,wuaueng.dll,wuaueng1.dll,wucltui.dll,wups.dll,wups2.dll,wuweb.dll,qmgr.dll,qmgrprxy.dll,wucltux.dll,muweb.dll,wuwebv.dll' -split ','
ForEach ($File in $Files) { & $env:SystemRoot\system32\regsvr32.exe "/s $env:windir\system32\$File" }


Write-LogMessage -Message 'Starting Windows Services related to the Windows Update Agent' -Console
Start-Service -ErrorAction SilentlyContinue -Name cryptsvc
Start-Service -ErrorAction SilentlyContinue -Name appidsvc
Start-Service -ErrorAction SilentlyContinue -Name BITS
Start-Service -ErrorAction SilentlyContinue -Name DcomLaunch
Start-Service -ErrorAction Stop -Name wuauserv #TODO: exit with error if not successful

Write-LogMessage -Message 'Updating Active Directory Group Policy' -Console
GPUpdate.exe /force
#TODO: force Windows MDM / Intune policy update


Write-LogMessage -Message 'Force Windows Update detection/scan/discovery' -Console
wuauclt.exe /resetauthorization /detectnow
#wuauclt.exe /FakeReboot
#wuauclt.exe /resetauthorization
#wuauclt.exe /detectnow
#wuauclt.exe /reportnow
#wuauclt.exe /TestWSUSServer
#wuauclt.exe /downloadnowfast

Write-LogMessage -Message 'trigger ConfigMgr Software Updates Assignments Evaluation Cycle' -Console
#TODO: if ConfigMgr client is installed, restart service and run update cycle
([wmiclass]'root\ccm:SMS_Client').TriggerSchedule('{00000000-0000-0000-0000-000000000108}')


Write-LogMessage -Message 'Remediation finished.  Restart computer complete' -Console -Type Warn
exit 3010
